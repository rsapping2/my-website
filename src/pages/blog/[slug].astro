---
import { getCollection, getEntry } from 'astro:content';
import BaseLayout from '../../layouts/BaseLayout.astro';
import RelatedPosts from '../../components/RelatedPosts.astro';
import '../../styles/blog-post.css';

export async function getStaticPaths() {
  const posts = await getCollection('blog');
  return posts.map((post) => ({
    params: { slug: post.slug },
    props: { slug: post.slug },
  }));
}

const { slug } = Astro.props;
const entry = await getEntry('blog', slug);

if (!entry) {
  throw new Error(`Post not found for slug: ${slug}`);
}

const { Content } = await entry.render();
const { data } = entry;
---

<BaseLayout 
  title={data.title}
  description={data.description}
  image={data.image || '/images/default.png'}
  type="article"
>
  <article>
    <h1>{data.title}</h1>
    <p><small>{data.pubDate.toLocaleDateString('en-US', { timeZone: 'America/Los_Angeles' })}</small></p>
    <p>{data.description}</p>

    {data.tags && (
      <div class="tags">
        <strong>Tags:</strong>
        {data.tags.map((tag) => (
          <a href={`/posts?tag=${encodeURIComponent(tag)}`} class="tag-link">{tag}</a>
        ))}
      </div>
    )}

    {data.readTime && (
      <div class="read-time">
        <strong>Read time:</strong> <span class="read-time-value">{data.readTime}</span>
      </div>
    )}

    <hr />

    <Content />
  </article>

  {data.tags && (
    <RelatedPosts 
      currentTags={data.tags} 
      currentSlug={slug}
      limit={3}
    />
  )}

</BaseLayout>
